#!/bin/sh -e

#
# Copyright (c) 2019 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#
# SPDX-License-Identifier: Apache-2.0'
#

make -C ../.. cmd/security-secretstore-setup/security-secretstore-setup

cat <<EOH >docker-compose.yml
version: '3'
volumes:
  db-data:
  log-data:
  vault-config:
  vault-file:
  vault-logs:

services:

  vault:
    image: edgexfoundry/docker-edgex-vault:1.0.0
    container_name: edgex-vault
    hostname: edgex-vault
    networks:
      - default
    ports:
      - "8200:8200"
    cap_add:
      - "IPC_LOCK"
    command: "vault server -dev-listen-address=0.0.0.0:8200 -dev-kv-v1 -log-level=info"
    environment:
      - 'VAULT_ADDR=https://edgex-vault:8200'
      - 'VAULT_CONFIG_DIR=/vault/config'
      - 'VAULT_UI=true'
    volumes:
      - vault-config:/vault/config
      - vault-file:/vault/file
      - vault-logs:/vault/logs
...
EOH

docker-compose up -d

echo 'Waiting for stack to come up...'
sleep 5

vaultid=`docker ps | grep 'edgexfoundry/docker-edgex-vault' | cut -d' ' -f1`
echo "Vault container id $vaultid"

docker exec $vaultid cat /vault/config/pki/EdgeXFoundryCA/EdgeXFoundryCA.pem > EdgeXFoundryCA.pem
docker exec $vaultid cat /vault/config/pki/EdgeXFoundryCA/edgex-kong.pem > edgex-kong.pem
docker exec $vaultid cat /vault/config/pki/EdgeXFoundryCA/edgex-kong.priv.key > edgex-kong.priv.key

vault_token=`docker logs $vaultid 2>/dev/null | grep 'Root Token:' | cut -d ':' -f2 | tr -d '[:space:]'`
echo "Vault root token is $vault_token"

cat <<EOH > resp-init.json
{
  "keys": [
    "test-keys"
  ],
  "keys_base64": [
    "test-keys-base64"
  ],
  "root_token": "${vault_token}"
}
EOH

test -d testdata || mkdir testdata

cat <<EOH > testdata/configuration.toml

[Writable]
LogLevel = 'DEBUG'

[Logging]
EnableRemote = false
File = './logs/security-secretstore-setup.log'

[SecretService]
scheme = "http"
server = "localhost"
port = 8200
certpath = "v1/secret/edgex/pki/tls/edgex-kong"
cafilepath = "EdgeXFoundryCA.pem"
certfilepath = "edgex-kong.pem"
keyfilepath = "edgex-kong.priv.key"
tokenfolderpath = "."
tokenfile = "resp-init.json"
vaultsecretshares = 5
vaultsecretthreshold = 3
tokenprovider = "echo"
tokenproviderargs = [ "-confdir", "res/token-file-provider" ]
tokenprovidertype = "oneshot"
EOH

./security-secretstore-setup --confdir testdata --init=true
